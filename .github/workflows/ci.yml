# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Kotlin project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# NOTE: The gradle wrapper must be executable. To do this run `git update-index --chmod=+x gradlew`

name: Kotlin CI with Gradle

on:
  push:
    branches:
      - '**'
  pull_request:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    # Don't run the build action twice when pushing to a PR branch.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Publish to repositories
        if: "github.event_name == 'push' && github.ref == 'refs/heads/main'"
        run: ./gradlew publish
        env:
          SIGNING_KEY: "${{ secrets.GPG_SIGNING_KEY }}"
          SIGNING_PASSWORD: "${{ secrets.GPG_SIGNING_PASSWORD }}"
          VOXELPI_REPO_USER: "${{ secrets.VOXELPI_REPO_USER }}"
          VOXELPI_REPO_KEY: "${{ secrets.VOXELPI_REPO_KEY }}"
          GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
